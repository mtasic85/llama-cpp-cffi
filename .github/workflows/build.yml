name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: aarch64
          # - os: macos-latest
          #   arch: arm64
          # - os: windows-latest
          #   arch: x86_64

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Set CIBW_BUILD
        run: |
          python_version="${{ matrix.python-version }}"
          cibw_build="cp${python_version/./}-*"
          echo "CIBW_BUILD=$cibw_build" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_1
          CIBW_MUSLLINUX_AARCH64_IMAGE: musllinux_1_1

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl